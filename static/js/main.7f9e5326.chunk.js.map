{"version":3,"sources":["assets/luna.mp3","assets/lilo.mp3","assets/chihiro.mp3","assets/lily.mp3","App.tsx","reportWebVitals.ts","index.tsx"],"names":["EPlayStatus","dogs","name","soundUrl","require","default","color","AudioCard","dog","useState","STOPPED","play","setPlay","className","PLAYING","onClick","onBlur","url","playStatus","onFinishedPlaying","loop","App","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wJAAA,OAAe,cAA0B,kC,6BCAzC,OAAe,cAA0B,kC,6BCAzC,OAAe,cAA0B,qC,6BCAzC,OAAe,cAA0B,kC,wCCUpCA,E,wFAAAA,K,kBAAAA,E,kBAAAA,E,iBAAAA,M,KAUL,IAAMC,EAAe,CACnB,CACEC,KAAM,OACNC,SAAUC,EAAQ,IAAqBC,QACvCC,MAAO,QAET,CACEJ,KAAM,OACNC,SAAUC,EAAQ,IAAqBC,QACvCC,MAAO,SAET,CACEJ,KAAM,UACNC,SAAUC,EAAQ,IAAwBC,QAC1CC,MAAO,QAET,CACEJ,KAAM,OACNC,SAAUC,EAAQ,IAAqBC,QACvCC,MAAO,WAILC,EAAY,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,IAA0B,EACrBC,mBAAsBT,EAAYU,SADb,mBACtCC,EADsC,KAChCC,EADgC,KAc7C,OACE,yBACEC,UAAS,qBACPF,IAASX,EAAYc,QAArB,sBAA8CN,EAAIF,OAAU,IAE9DS,QAhBoB,WACtB,OAAQJ,GACN,KAAKX,EAAYU,QACfE,EAAQZ,EAAYc,SACpB,MACF,KAAKd,EAAYc,QACfF,EAAQZ,EAAYU,WAWtBM,OAAQ,kBAAMJ,EAAQZ,EAAYU,UALpC,UAOE,oBAAIG,UAAU,aAAd,SAA4BL,EAAIN,OAChC,cAAC,IAAD,CACEe,IAAKT,EAAIL,SACTe,WAAYP,EACZQ,kBAAmB,kBAAMP,EAAQZ,EAAYU,UAC7CU,MAAI,QAmBGC,EAbH,WACV,OACE,sBAAKR,UAAU,YAAf,UACE,oBAAIA,UAAU,SAAd,wBACA,qBAAKA,UAAU,iBAAf,SACGZ,EAAKqB,KAAI,SAACd,GAAD,OACR,cAAC,EAAD,CAAWA,IAAKA,aCpEXe,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7f9e5326.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/luna.7a3b3fbf.mp3\";","export default __webpack_public_path__ + \"static/media/lilo.5366a723.mp3\";","export default __webpack_public_path__ + \"static/media/chihiro.47493efe.mp3\";","export default __webpack_public_path__ + \"static/media/lily.b14dca11.mp3\";","import React, { useState } from \"react\";\nimport Sound from \"react-sound\";\nimport \"./App.scss\";\n\ninterface Idog {\n  name: string;\n  soundUrl: string;\n  color: string;\n}\n\nenum EPlayStatus {\n  STOPPED = \"STOPPED\",\n  PLAYING = \"PLAYING\",\n  PAUSED = \"PAUSED\",\n}\n\ninterface AudioCardProps {\n  dog: Idog;\n}\n\nconst dogs: Idog[] = [\n  {\n    name: \"Luna\",\n    soundUrl: require(\"./assets/luna.mp3\").default,\n    color: \"pink\",\n  },\n  {\n    name: \"Lilo\",\n    soundUrl: require(\"./assets/lilo.mp3\").default,\n    color: \"brown\",\n  },\n  {\n    name: \"Chihiro\",\n    soundUrl: require(\"./assets/chihiro.mp3\").default,\n    color: \"blue\",\n  },\n  {\n    name: \"Lily\",\n    soundUrl: require(\"./assets/lily.mp3\").default,\n    color: \"purple\",\n  },\n];\n\nconst AudioCard = ({ dog }: AudioCardProps) => {\n  const [play, setPlay] = useState<EPlayStatus>(EPlayStatus.STOPPED);\n\n  const handleCardClick = () => {\n    switch (play) {\n      case EPlayStatus.STOPPED:\n        setPlay(EPlayStatus.PLAYING);\n        break;\n      case EPlayStatus.PLAYING:\n        setPlay(EPlayStatus.STOPPED);\n        break;\n    }\n  };\n\n  return (\n    <button\n      className={`audio-card ${\n        play === EPlayStatus.PLAYING ? `audio-card--${dog.color}` : \"\"\n      }`}\n      onClick={handleCardClick}\n      onBlur={() => setPlay(EPlayStatus.STOPPED)}\n    >\n      <h2 className=\"card-title\">{dog.name}</h2>\n      <Sound\n        url={dog.soundUrl}\n        playStatus={play}\n        onFinishedPlaying={() => setPlay(EPlayStatus.STOPPED)}\n        loop\n      />\n    </button>\n  );\n};\n\nconst App = () => {\n  return (\n    <div className=\"container\">\n      <h1 className=\"header\">Dog Caller</h1>\n      <div className=\"card-container\">\n        {dogs.map((dog) => (\n          <AudioCard dog={dog} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}